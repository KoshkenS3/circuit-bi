{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 29,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "postgres",
        "uid": "P1A7A05C63CAD1F73"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 2,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "desc"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P1A7A05C63CAD1F73"
          },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  time_bucket('1d', datetime) AS \"time\",\n  coalesce(p.product_data->'vault'->>'id', p.product_data->'boost'->>'id') as beefy_id,\n  max(underlying_capture_percentage)\nFROM beefy_vault_stats_ts\njoin product p using(product_id)\nWHERE\n  $__timeFilter(datetime)\n  and product_id in ($_product_ids)\ngroup by 1, 2\nORDER BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "balance"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "beefy_investor_timeline_cache_ts",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "% capture by vault",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P1A7A05C63CAD1F73"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": "diff_.+_percentage"
            },
            "properties": [
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "red",
                      "value": null
                    },
                    {
                      "color": "yellow",
                      "value": -0.01
                    },
                    {
                      "color": "green",
                      "value": 0.01
                    }
                  ]
                }
              },
              {
                "id": "custom.displayMode",
                "value": "color-background"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".+_percentage"
            },
            "properties": [
              {
                "id": "unit",
                "value": "percentunit"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 11,
        "w": 24,
        "x": 0,
        "y": 9
      },
      "id": 4,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": false,
            "displayName": "diff_underlying_capture_percentage"
          }
        ]
      },
      "pluginVersion": "9.2.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P1A7A05C63CAD1F73"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with vault_stats_ts_recent as (\n  SELECT\n      s.product_id,\n      last(s.datetime, s.datetime) AS \"datetime\",\n      last(s.underlying_capture_percentage, s.datetime) as underlying_capture_percentage\n    FROM beefy_vault_stats_ts s\n    WHERE\n      datetime < '${__to:date:iso}'\n      and product_id in ($_product_ids)\n    group by 1\n),\nvault_stats_ts_compare_to as (\n  SELECT\n      s.product_id,\n      last(s.datetime, s.datetime) AS \"datetime\",\n      last(s.underlying_capture_percentage, s.datetime) as underlying_capture_percentage\n    FROM beefy_vault_stats_ts s\n    WHERE\n      datetime < '${__from:date:iso}'\n      and product_id in ($_product_ids)\n    group by 1\n),\nvault_stats_ts_compared as (\n  select recent.product_id,\n    compare_to.datetime as compare_to_datetime,\n    recent.datetime as recent_datetime,\n    recent.datetime - compare_to.datetime as datetime_diff,\n    compare_to.underlying_capture_percentage as compare_to_underlying_capture_percentage,\n    recent.underlying_capture_percentage as recent_underlying_capture_percentage,\n    coalesce(recent.underlying_capture_percentage, 0) - coalesce(compare_to.underlying_capture_percentage, 0) as diff_underlying_capture_percentage\n  from vault_stats_ts_recent recent\n  left join vault_stats_ts_compare_to compare_to using (product_id)\n)\nselect p.product_key,\n  coalesce(p.product_data->'vault'->>'id', p.product_data->'boost'->>'id') as beefy_id,\n  ts.*\nfrom vault_stats_ts_compared ts\njoin product p using (product_id)\norder by ts.diff_underlying_capture_percentage desc",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "balance"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "beefy_investor_timeline_cache_ts",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "capture % progress ${__from:date:iso} -> ${__to:date:iso}",
      "type": "table"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P1A7A05C63CAD1F73"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 24,
        "x": 0,
        "y": 20
      },
      "id": 6,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "9.2.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P1A7A05C63CAD1F73"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT \n  s.product_id,\n  coalesce(p.product_data->'vault'->>'id', p.product_data->'boost'->>'id') as beefy_id,\n  s.datetime,\n  s.block_number,\n  s.vault_total_supply::varchar,\n  s.share_to_underlying_price::varchar,\n  s.staked_underlying::varchar,\n  s.underlying_total_supply::varchar,\n  s.underlying_capture_percentage\nFROM beefy_vault_stats_ts s\nJOIN product p using (product_id)\nWHERE\n  $__timeFilter(datetime)\n  and product_id in ($_product_ids)\nORDER BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "balance"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "beefy_investor_timeline_cache_ts",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Raw data",
      "type": "table"
    }
  ],
  "schemaVersion": 37,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "optimism",
          "value": "optimism"
        },
        "datasource": {
          "type": "postgres",
          "uid": "P1A7A05C63CAD1F73"
        },
        "definition": "select distinct chain from product where chain not in ('harmony', 'heco', 'aurora', 'celo', 'emerald')",
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "chain",
        "options": [],
        "query": "select distinct chain from product where chain not in ('harmony', 'heco', 'aurora', 'celo', 'emerald')",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 5,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "no",
          "value": "no"
        },
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "include_eol",
        "options": [
          {
            "selected": true,
            "text": "no",
            "value": "no"
          },
          {
            "selected": false,
            "text": "yes",
            "value": "yes"
          }
        ],
        "query": "no, yes",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "current": {
          "selected": true,
          "text": [
            "All"
          ],
          "value": [
            "$__all"
          ]
        },
        "datasource": {
          "type": "postgres",
          "uid": "P1A7A05C63CAD1F73"
        },
        "definition": "select chain || ':' || case when product_data->'vault' is not null then 'vault' else 'boost' end || ':' || coalesce(product_data->'vault'->>'id', product_data->'boost'->>'id') || ' ' || product_key\nfrom product \nwhere chain = '$chain'\n and  CASE \n         WHEN '$include_eol' = 'yes' THEN true\n         ELSE coalesce(product_data->'boost', product_data->'vault')->>'eol' = 'false'\n    END",
        "hide": 0,
        "includeAll": true,
        "multi": true,
        "name": "product_keys",
        "options": [],
        "query": "select chain || ':' || case when product_data->'vault' is not null then 'vault' else 'boost' end || ':' || coalesce(product_data->'vault'->>'id', product_data->'boost'->>'id') || ' ' || product_key\nfrom product \nwhere chain = '$chain'\n and  CASE \n         WHEN '$include_eol' = 'yes' THEN true\n         ELSE coalesce(product_data->'boost', product_data->'vault')->>'eol' = 'false'\n    END",
        "refresh": 1,
        "regex": "/(?<text>[^ ]+) (?<value>[^ ]+)/",
        "skipUrlSync": false,
        "sort": 5,
        "type": "query"
      },
      {
        "current": {
          "selected": true,
          "text": [
            "All"
          ],
          "value": [
            "$__all"
          ]
        },
        "datasource": {
          "type": "postgres",
          "uid": "P1A7A05C63CAD1F73"
        },
        "definition": "select product_id \nfrom product \nwhere product_key in ($product_keys)",
        "hide": 0,
        "includeAll": true,
        "multi": true,
        "name": "_product_ids",
        "options": [],
        "query": "select product_id \nfrom product \nwhere product_key in ($product_keys)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-7d",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Chain TVL",
  "uid": "jQ2acqfWy",
  "version": 1,
  "weekStart": ""
}