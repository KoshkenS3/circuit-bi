{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": { "type": "grafana", "uid": "-- Grafana --" },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 4,
  "iteration": 1657584622957,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "collapsed": false,
      "gridPos": { "h": 1, "w": 24, "x": 0, "y": 0 },
      "id": 7,
      "panels": [],
      "title": "Portfolio USD Value",
      "type": "row"
    },
    {
      "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
      "fieldConfig": {
        "defaults": {
          "color": { "mode": "palette-classic" },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": { "legend": false, "tooltip": false, "viz": false },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": { "type": "linear" },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": { "group": "A", "mode": "none" },
            "thresholdsStyle": { "mode": "off" }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              { "color": "green", "value": null },
              { "color": "red", "value": 80 }
            ]
          },
          "unit": "currencyUSD"
        },
        "overrides": []
      },
      "gridPos": { "h": 11, "w": 12, "x": 0, "y": 1 },
      "id": 8,
      "options": {
        "legend": { "calcs": [], "displayMode": "list", "placement": "bottom" },
        "tooltip": { "mode": "multi", "sort": "desc" }
      },
      "targets": [
        {
          "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with\nbalance_4h_ts as (\n  select *\n  from (\n    select chain, contract_address,\n        time_bucket_gapfill('$__interval', datetime) as datetime,\n        locf(coalesce(balance_after,0)) as balance\n    from data_derived.erc20_owner_balance_diff_4h_ts\n    where $__timeFilter(datetime)\n        and owner_address = evm_address_to_bytea('$investor_address')\n    group by chain, contract_address, time_bucket_gapfill('$__interval', datetime), balance_after\n  ) as t\n  where balance is not null\n)\nselect \n    b.datetime as time,\n    sum(\n        (\n          (b.balance::NUMERIC * vpt.avg_ppfs::NUMERIC) / POW(10, 18 + vpt.want_decimals)::NUMERIC\n        )\n        * vpt.avg_want_usd_value\n    ) as value\nfrom balance_4h_ts b\nleft join data_derived.vault_ppfs_and_price_4h_ts vpt \n    on b.chain = vpt.chain \n    and b.contract_address = vpt.contract_address\n    and b.datetime = vpt.datetime\n    and $__timeFilter(vpt.datetime)\nwhere vpt.vault_id is not null\ngroup by 1\norder by 1\n\n\n",
          "refId": "A",
          "select": [[{ "params": ["usd_value"], "type": "column" }]],
          "table": "oracle_price_ts",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [{ "name": "$__timeFilter", "params": [], "type": "macro" }]
        }
      ],
      "title": "Total PTF $ Value",
      "type": "timeseries"
    },
    {
      "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
      "fieldConfig": {
        "defaults": {
          "color": { "mode": "palette-classic" },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": { "legend": false, "tooltip": false, "viz": false },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": { "type": "linear" },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": { "group": "A", "mode": "none" },
            "thresholdsStyle": { "mode": "off" }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              { "color": "green", "value": null },
              { "color": "red", "value": 80 }
            ]
          },
          "unit": "currencyUSD"
        },
        "overrides": []
      },
      "gridPos": { "h": 11, "w": 12, "x": 12, "y": 1 },
      "id": 9,
      "options": {
        "legend": { "calcs": [], "displayMode": "list", "placement": "bottom" },
        "tooltip": { "mode": "multi", "sort": "desc" }
      },
      "targets": [
        {
          "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with\nbalance_4h_ts as (\n  select *\n  from (\n    select chain, contract_address,\n        time_bucket_gapfill('$__interval', datetime) as datetime,\n        locf(coalesce(balance_after,0)) as balance\n    from data_derived.erc20_owner_balance_diff_4h_ts\n    where $__timeFilter(datetime)\n        and owner_address = evm_address_to_bytea('$investor_address')\n    group by chain, contract_address, time_bucket_gapfill('$__interval', datetime), balance_after\n  ) as t\n  where balance is not null\n)\nselect \n    b.datetime as time, \n    vpt.vault_id,\n    sum(\n        (\n          (b.balance::NUMERIC * vpt.avg_ppfs::NUMERIC) / POW(10, 18 + vpt.want_decimals)::NUMERIC\n        )\n        * vpt.avg_want_usd_value\n    ) as value\nfrom balance_4h_ts b\nleft join data_derived.vault_ppfs_and_price_4h_ts vpt \n    on b.chain = vpt.chain \n    and b.contract_address = vpt.contract_address\n    and b.datetime = vpt.datetime\n    and $__timeFilter(vpt.datetime)\nwhere vpt.vault_id is not null\ngroup by 1,2\norder by 1,2",
          "refId": "A",
          "select": [[{ "params": ["usd_value"], "type": "column" }]],
          "table": "oracle_price_ts",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [{ "name": "$__timeFilter", "params": [], "type": "macro" }]
        }
      ],
      "title": "$ amount per vault",
      "type": "timeseries"
    },
    {
      "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
      "fieldConfig": {
        "defaults": {
          "color": { "mode": "palette-classic" },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": { "legend": false, "tooltip": false, "viz": false },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": { "type": "linear" },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": { "group": "A", "mode": "normal" },
            "thresholdsStyle": { "mode": "off" }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              { "color": "green", "value": null },
              { "color": "red", "value": 80 }
            ]
          },
          "unit": "currencyUSD"
        },
        "overrides": []
      },
      "gridPos": { "h": 12, "w": 12, "x": 0, "y": 12 },
      "id": 11,
      "options": {
        "legend": { "calcs": [], "displayMode": "list", "placement": "bottom" },
        "tooltip": { "mode": "multi", "sort": "desc" }
      },
      "targets": [
        {
          "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with\nbalance_4h_ts as (\n  select *\n  from (\n    select chain, contract_address,\n        time_bucket_gapfill('$__interval', datetime) as datetime,\n        locf(coalesce(balance_after,0)) as balance\n    from data_derived.erc20_owner_balance_diff_4h_ts\n    where $__timeFilter(datetime)\n        and owner_address = evm_address_to_bytea('$investor_address')\n    group by chain, contract_address, time_bucket_gapfill('$__interval', datetime), balance_after\n  ) as t\n  where balance is not null\n)\nselect \n    b.datetime as time, \n    vpt.chain,\n    sum(\n        (\n          (b.balance::NUMERIC * vpt.avg_ppfs::NUMERIC) / POW(10, 18 + vpt.want_decimals)::NUMERIC\n        )\n        * vpt.avg_want_usd_value\n    ) as value\nfrom balance_4h_ts b\nleft join data_derived.vault_ppfs_and_price_4h_ts vpt \n    on b.chain = vpt.chain \n    and b.contract_address = vpt.contract_address\n    and b.datetime = vpt.datetime\n    and $__timeFilter(vpt.datetime)\nwhere vpt.vault_id is not null\ngroup by 1,2\norder by 1,2",
          "refId": "A",
          "select": [[{ "params": ["usd_value"], "type": "column" }]],
          "table": "oracle_price_ts",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [{ "name": "$__timeFilter", "params": [], "type": "macro" }]
        }
      ],
      "title": "$ amount per chain (cumulative)",
      "type": "timeseries"
    },
    {
      "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
      "fieldConfig": {
        "defaults": {
          "color": { "mode": "palette-classic" },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": { "legend": false, "tooltip": false, "viz": false },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": { "type": "linear" },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": { "group": "A", "mode": "percent" },
            "thresholdsStyle": { "mode": "off" }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              { "color": "green", "value": null },
              { "color": "red", "value": 80 }
            ]
          },
          "unit": "currencyUSD"
        },
        "overrides": []
      },
      "gridPos": { "h": 12, "w": 12, "x": 12, "y": 12 },
      "id": 4,
      "options": {
        "legend": { "calcs": [], "displayMode": "list", "placement": "bottom" },
        "tooltip": { "mode": "multi", "sort": "desc" }
      },
      "targets": [
        {
          "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with\nbalance_4h_ts as (\n  select *\n  from (\n    select chain, contract_address,\n        time_bucket_gapfill('$__interval', datetime) as datetime,\n        locf(coalesce(balance_after,0)) as balance\n    from data_derived.erc20_owner_balance_diff_4h_ts\n    where $__timeFilter(datetime)\n        and owner_address = evm_address_to_bytea('$investor_address')\n    group by chain, contract_address, time_bucket_gapfill('$__interval', datetime), balance_after\n  ) as t\n  where balance is not null\n)\nselect \n    b.datetime as time, \n    vpt.chain,\n    sum(\n        (\n          (b.balance::NUMERIC * vpt.avg_ppfs::NUMERIC) / POW(10, 18 + vpt.want_decimals)::NUMERIC\n        )\n        * vpt.avg_want_usd_value\n    ) as value\nfrom balance_4h_ts b\nleft join data_derived.vault_ppfs_and_price_4h_ts vpt \n    on b.chain = vpt.chain \n    and b.contract_address = vpt.contract_address\n    and b.datetime = vpt.datetime\n    and $__timeFilter(vpt.datetime)\nwhere vpt.vault_id is not null\ngroup by 1,2\norder by 1,2",
          "refId": "A",
          "select": [[{ "params": ["usd_value"], "type": "column" }]],
          "table": "oracle_price_ts",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [{ "name": "$__timeFilter", "params": [], "type": "macro" }]
        }
      ],
      "title": "$ amount per chain (cumulative to 100%)",
      "type": "timeseries"
    },
    {
      "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
      "fieldConfig": {
        "defaults": {
          "color": { "mode": "palette-classic" },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": { "legend": false, "tooltip": false, "viz": false },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": { "type": "linear" },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": { "group": "A", "mode": "normal" },
            "thresholdsStyle": { "mode": "off" }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              { "color": "green", "value": null },
              { "color": "red", "value": 80 }
            ]
          },
          "unit": "currencyUSD"
        },
        "overrides": []
      },
      "gridPos": { "h": 12, "w": 12, "x": 0, "y": 24 },
      "id": 10,
      "options": {
        "legend": { "calcs": [], "displayMode": "list", "placement": "bottom" },
        "tooltip": { "mode": "multi", "sort": "desc" }
      },
      "targets": [
        {
          "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with\nbalance_4h_ts as (\n  select *\n  from (\n    select chain, contract_address,\n        time_bucket_gapfill('$__interval', datetime) as datetime,\n        locf(coalesce(balance_after,0)) as balance\n    from data_derived.erc20_owner_balance_diff_4h_ts\n    where $__timeFilter(datetime)\n        and owner_address = evm_address_to_bytea('$investor_address')\n    group by chain, contract_address, time_bucket_gapfill('$__interval', datetime), balance_after\n  ) as t\n  where balance is not null\n)\nselect \n    b.datetime as time, \n    vpt.vault_id,\n    sum(\n        (\n          (b.balance::NUMERIC * vpt.avg_ppfs::NUMERIC) / POW(10, 18 + vpt.want_decimals)::NUMERIC\n        )\n        * vpt.avg_want_usd_value\n    ) as value\nfrom balance_4h_ts b\nleft join data_derived.vault_ppfs_and_price_4h_ts vpt \n    on b.chain = vpt.chain \n    and b.contract_address = vpt.contract_address\n    and b.datetime = vpt.datetime\n    and $__timeFilter(vpt.datetime)\nwhere vpt.vault_id is not null\ngroup by 1,2\norder by 1,2",
          "refId": "A",
          "select": [[{ "params": ["usd_value"], "type": "column" }]],
          "table": "oracle_price_ts",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [{ "name": "$__timeFilter", "params": [], "type": "macro" }]
        }
      ],
      "title": "$ amount per vault (cumulative)",
      "type": "timeseries"
    },
    {
      "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
      "fieldConfig": {
        "defaults": {
          "color": { "mode": "palette-classic" },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": { "legend": false, "tooltip": false, "viz": false },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": { "type": "linear" },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": { "group": "A", "mode": "percent" },
            "thresholdsStyle": { "mode": "off" }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              { "color": "green", "value": null },
              { "color": "red", "value": 80 }
            ]
          },
          "unit": "currencyUSD"
        },
        "overrides": []
      },
      "gridPos": { "h": 12, "w": 12, "x": 12, "y": 24 },
      "id": 12,
      "options": {
        "legend": { "calcs": [], "displayMode": "list", "placement": "bottom" },
        "tooltip": { "mode": "multi", "sort": "desc" }
      },
      "targets": [
        {
          "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with\nbalance_4h_ts as (\n  select *\n  from (\n    select chain, contract_address,\n        time_bucket_gapfill('$__interval', datetime) as datetime,\n        locf(coalesce(balance_after,0)) as balance\n    from data_derived.erc20_owner_balance_diff_4h_ts\n    where $__timeFilter(datetime)\n        and owner_address = evm_address_to_bytea('$investor_address')\n    group by chain, contract_address, time_bucket_gapfill('$__interval', datetime), balance_after\n  ) as t\n  where balance is not null\n)\nselect \n    b.datetime as time, \n    vpt.vault_id,\n    sum(\n        (\n          (b.balance::NUMERIC * vpt.avg_ppfs::NUMERIC) / POW(10, 18 + vpt.want_decimals)::NUMERIC\n        )\n        * vpt.avg_want_usd_value\n    ) as value\nfrom balance_4h_ts b\nleft join data_derived.vault_ppfs_and_price_4h_ts vpt \n    on b.chain = vpt.chain \n    and b.contract_address = vpt.contract_address\n    and b.datetime = vpt.datetime\n    and $__timeFilter(vpt.datetime)\nwhere vpt.vault_id is not null\ngroup by 1,2\norder by 1,2",
          "refId": "A",
          "select": [[{ "params": ["usd_value"], "type": "column" }]],
          "table": "oracle_price_ts",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [{ "name": "$__timeFilter", "params": [], "type": "macro" }]
        }
      ],
      "title": "$ amount per vault (cumulative to 100%)",
      "type": "timeseries"
    }
  ],
  "refresh": false,
  "schemaVersion": 36,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "0x650c0ed459d82335afdad70794b9a61b7795aa6a",
          "value": "0x650c0ed459d82335afdad70794b9a61b7795aa6a"
        },
        "hide": 0,
        "name": "investor_address",
        "options": [
          {
            "selected": true,
            "text": "0x650c0ed459d82335afdad70794b9a61b7795aa6a",
            "value": "0x650c0ed459d82335afdad70794b9a61b7795aa6a"
          }
        ],
        "query": "0x650c0ed459d82335afdad70794b9a61b7795aa6a",
        "skipUrlSync": false,
        "type": "textbox"
      }
    ]
  },
  "time": {
    "from": "2022-04-27T11:39:29.833Z",
    "to": "2022-07-04T15:42:24.341Z"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Investor USD 4h Overview",
  "uid": "kFb7S767k",
  "version": 12,
  "weekStart": ""
}
