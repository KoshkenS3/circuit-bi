{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": { "type": "grafana", "uid": "-- Grafana --" },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 8,
  "iteration": 1657151498586,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "collapsed": false,
      "gridPos": { "h": 1, "w": 24, "x": 0, "y": 0 },
      "id": 2,
      "panels": [],
      "repeat": "vault_id",
      "repeatDirection": "h",
      "title": "Vault $vault_id",
      "type": "row"
    },
    {
      "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
      "fieldConfig": {
        "defaults": {
          "color": { "mode": "palette-classic" },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": { "legend": false, "tooltip": false, "viz": false },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": { "type": "linear" },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": { "group": "A", "mode": "none" },
            "thresholdsStyle": { "mode": "off" }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              { "color": "green", "value": null },
              { "color": "red", "value": 80 }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": { "h": 13, "w": 12, "x": 0, "y": 1 },
      "id": 4,
      "options": {
        "legend": { "calcs": [], "displayMode": "list", "placement": "bottom" },
        "tooltip": { "mode": "multi", "sort": "none" }
      },
      "targets": [
        {
          "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with\nbalance_4h_ts as (\n  select *\n  from (\n    select \n        time_bucket_gapfill('$__interval', datetime) as datetime,\n        locf(coalesce(balance_after,0)) as balance\n    from data_derived.erc20_owner_balance_diff_4h_ts\n    where $__timeFilter(datetime)\n      and chain = '$chain'\n      and contract_address in (\n        select contract_address\n        from data_raw.vault\n        where vault_id in ($vault_id)\n        and chain = '$chain'\n      )\n      and owner_address = evm_address_to_bytea('$investor_address')\n    group by time_bucket_gapfill('$__interval', datetime), balance_after\n  ) as t\n  where balance is not null\n)\nselect \n    b.datetime as time,\n    sum(\n        (\n          (b.balance::NUMERIC * vpt.avg_ppfs::NUMERIC) / POW(10, 18 + vpt.want_decimals)::NUMERIC\n        )\n        * vpt.avg_want_usd_value\n    ) as value\nfrom balance_4h_ts b\nleft join data_derived.vault_ppfs_and_price_4h_ts vpt \n    on vpt.chain = '$chain'\n    and vpt.vault_id in ($vault_id)\n    and b.datetime = vpt.datetime\n    and $__timeFilter(vpt.datetime)\nwhere vpt.vault_id is not null\ngroup by 1\norder by 1\n",
          "refId": "A",
          "select": [[{ "params": ["usd_value"], "type": "column" }]],
          "table": "oracle_price_ts",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [{ "name": "$__timeFilter", "params": [], "type": "macro" }]
        }
      ],
      "title": "$vault_id USD value",
      "type": "timeseries"
    },
    {
      "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
      "fieldConfig": {
        "defaults": {
          "color": { "mode": "palette-classic" },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": { "legend": false, "tooltip": false, "viz": false },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": { "type": "linear" },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": { "group": "A", "mode": "none" },
            "thresholdsStyle": { "mode": "off" }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              { "color": "green", "value": null },
              { "color": "red", "value": 80 }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": { "h": 13, "w": 12, "x": 12, "y": 1 },
      "id": 5,
      "options": {
        "legend": { "calcs": [], "displayMode": "list", "placement": "bottom" },
        "tooltip": { "mode": "multi", "sort": "none" }
      },
      "targets": [
        {
          "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with\nbalance_4h_ts as (\n  select *\n  from (\n    select \n        time_bucket_gapfill('$__interval', datetime) as datetime,\n        locf(coalesce(balance_after,0)) as balance\n    from data_derived.erc20_owner_balance_diff_4h_ts\n    where $__timeFilter(datetime)\n      and chain = '$chain'\n      and contract_address in (\n        select contract_address\n        from data_raw.vault\n        where vault_id in ($vault_id)\n        and chain = '$chain'\n      )\n      and owner_address = evm_address_to_bytea('$investor_address')\n    group by time_bucket_gapfill('$__interval', datetime), balance_after\n  ) as t\n  where balance is not null\n)\nselect \n    b.datetime as time,\n    sum(\n       (b.balance::NUMERIC * vpt.avg_ppfs::NUMERIC) / POW(10, 18 + vpt.want_decimals)::NUMERIC\n    ) as value\nfrom balance_4h_ts b\nleft join data_derived.vault_ppfs_and_price_4h_ts vpt \n    on vpt.chain = '$chain'\n    and vpt.vault_id in ($vault_id)\n    and b.datetime = vpt.datetime\n    and $__timeFilter(vpt.datetime)\nwhere vpt.vault_id is not null\ngroup by 1\norder by 1\n",
          "refId": "A",
          "select": [[{ "params": ["usd_value"], "type": "column" }]],
          "table": "oracle_price_ts",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [{ "name": "$__timeFilter", "params": [], "type": "macro" }]
        }
      ],
      "title": "$vault_id $token_symbol amount",
      "type": "timeseries"
    }
  ],
  "schemaVersion": 36,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "0x18913656c387613f6D0a1bFF7365C335C0069e69",
          "value": "0x18913656c387613f6D0a1bFF7365C335C0069e69"
        },
        "hide": 0,
        "name": "investor_address",
        "options": [
          {
            "selected": true,
            "text": "0x18913656c387613f6D0a1bFF7365C335C0069e69",
            "value": "0x18913656c387613f6D0a1bFF7365C335C0069e69"
          }
        ],
        "query": "0x18913656c387613f6D0a1bFF7365C335C0069e69",
        "skipUrlSync": false,
        "type": "textbox"
      },
      {
        "current": { "selected": true, "text": "bsc", "value": "bsc" },
        "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
        "definition": "select distinct chain\nfrom data_derived.erc20_owner_balance_diff_4h_ts\nwhere owner_address = evm_address_to_bytea('$investor_address')",
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "chain",
        "options": [],
        "query": "select distinct chain\nfrom data_derived.erc20_owner_balance_diff_4h_ts\nwhere owner_address = evm_address_to_bytea('$investor_address')",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": { "selected": false, "text": "All", "value": "$__all" },
        "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
        "definition": "select distinct vault_id \nfrom data_derived.vault_ppfs_and_price_4h_ts\nwhere vault_id is not null and chain = '$chain' and contract_address in (\n  select distinct contract_address \n  from erc20_owner_balance_diff_4h_ts\n  where chain = '$chain' \n     and owner_address = evm_address_to_bytea('$investor_address')\n)",
        "hide": 2,
        "includeAll": true,
        "multi": true,
        "name": "vault_id",
        "options": [],
        "query": "select distinct vault_id \nfrom data_derived.vault_ppfs_and_price_4h_ts\nwhere vault_id is not null and chain = '$chain' and contract_address in (\n  select distinct contract_address \n  from erc20_owner_balance_diff_4h_ts\n  where chain = '$chain' \n     and owner_address = evm_address_to_bytea('$investor_address')\n)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 5,
        "type": "query"
      },
      {
        "current": { "selected": false, "text": "BIFI", "value": "BIFI" },
        "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
        "definition": "select want_price_oracle_id\nfrom data_raw.vault\nwhere chain = '$chain'\nand vault_id in ($vault_id)",
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "token_symbol",
        "options": [],
        "query": "select want_price_oracle_id\nfrom data_raw.vault\nwhere chain = '$chain'\nand vault_id in ($vault_id)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": { "from": "now-90d", "to": "now" },
  "timepicker": {},
  "timezone": "",
  "title": "Investment By Vault Overview",
  "uid": "o_EouSenk",
  "version": 6,
  "weekStart": ""
}
