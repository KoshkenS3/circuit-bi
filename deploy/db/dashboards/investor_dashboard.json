{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": { "type": "grafana", "uid": "-- Grafana --" },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": { "limit": 100, "matchAny": false, "tags": [], "type": "dashboard" },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 26,
  "iteration": 1665687867799,
  "links": [],
  "liveNow": false,
  "panels": [
    { "collapsed": false, "gridPos": { "h": 1, "w": 24, "x": 0, "y": 0 }, "id": 4, "panels": [], "title": "USD value", "type": "row" },
    {
      "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
      "fieldConfig": {
        "defaults": {
          "color": { "mode": "palette-classic" },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": { "legend": false, "tooltip": false, "viz": false },
            "lineInterpolation": "stepAfter",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": { "type": "linear" },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": { "group": "A", "mode": "none" },
            "thresholdsStyle": { "mode": "off" }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              { "color": "green", "value": null },
              { "color": "red", "value": 80 }
            ]
          },
          "unit": "currencyUSD"
        },
        "overrides": []
      },
      "gridPos": { "h": 16, "w": 24, "x": 0, "y": 1 },
      "id": 2,
      "options": { "legend": { "calcs": [], "displayMode": "list", "placement": "bottom" }, "tooltip": { "mode": "multi", "sort": "desc" } },
      "targets": [
        {
          "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "\nwith balance_gf_ts as (\n    select\n      time_bucket('$interval', $__timeFrom()::timestamptz - ('$interval'::interval)) as datetime,\n      product_id,\n      last(balance::numeric, datetime) as balance\n    from investment_balance_ts\n    where datetime < $__timeTo()\n      and investor_id = $_investor_id\n      and product_id in ($_product_ids)\n    group by 1,2\n  union all\n    SELECT\n      time_bucket_gapfill('$interval', datetime) as datetime,\n      product_id,\n      locf(last(balance::numeric, datetime)) as balance\n    from investment_balance_ts\n    WHERE\n      $__timeFilter(datetime)\n      and investor_id = $_investor_id\n      and product_id in ($_product_ids)\n    GROUP BY 1, 2\n),\nbalance_ts as (\n  select * from balance_gf_ts where balance is not null\n),\nprice_1_gf_ts as (\n  select\n    time_bucket_gapfill('$interval', datetime) as datetime,\n    price_feed_id as price_feed_id,\n    locf(last(price::numeric, datetime)) as price\n  from price_ts\n  where \n    datetime between $__timeFrom()::timestamptz - ('$interval'::interval) and $__timeTo()\n    and price_feed_id in ($_price_feed_1_ids)\n  group by 1,2\n),\nprice_1_ts as (\n  select * from price_1_gf_ts where price is not null\n),\nprice_2_gf_ts as (\n  select\n    time_bucket_gapfill('$interval', datetime) as datetime,\n    price_feed_id as price_feed_id,\n    locf(last(price::numeric, datetime)) as price\n  from price_ts\n  where \n    datetime between $__timeFrom()::timestamptz - ('$interval'::interval) and $__timeTo()\n    and price_feed_id in ($_price_feed_2_ids)\n  group by 1,2\n),\nprice_2_ts as (\n  select * from price_2_gf_ts where price is not null\n)\nselect\n  b.datetime as time,\n  pr.product_key,\n  (b.balance * p1.price * p2.price) as \"$\"\nfrom balance_ts b\n  left join product pr on b.product_id = pr.product_id\n  left join price_1_ts p1 on b.datetime = p1.datetime and pr.price_feed_1_id = p1.price_feed_id\n  left join price_2_ts p2 on b.datetime = p2.datetime and pr.price_feed_2_id = p2.price_feed_id\norder by 1;",
          "refId": "A",
          "select": [[{ "params": ["value"], "type": "column" }]],
          "timeColumn": "time",
          "where": [{ "name": "$__timeFilter", "params": [], "type": "macro" }]
        }
      ],
      "title": "Investor Vault balances",
      "type": "timeseries"
    },
    {
      "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
      "fieldConfig": {
        "defaults": {
          "color": { "mode": "palette-classic" },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": { "legend": false, "tooltip": false, "viz": false },
            "lineInterpolation": "stepAfter",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": { "type": "linear" },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": { "group": "A", "mode": "none" },
            "thresholdsStyle": { "mode": "off" }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              { "color": "green", "value": null },
              { "color": "red", "value": 80 }
            ]
          },
          "unit": "currencyUSD"
        },
        "overrides": []
      },
      "gridPos": { "h": 16, "w": 24, "x": 0, "y": 17 },
      "id": 11,
      "options": { "legend": { "calcs": [], "displayMode": "list", "placement": "bottom" }, "tooltip": { "mode": "multi", "sort": "desc" } },
      "targets": [
        {
          "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "\nwith balance_gf_ts as (\n    select\n      time_bucket('$interval', $__timeFrom()::timestamptz - ('$interval'::interval)) as datetime,\n      product_id,\n      last(balance::numeric, datetime) as balance\n    from investment_balance_ts\n    where datetime < $__timeTo()\n      and investor_id = $_investor_id\n      and product_id in ($_product_ids)\n    group by 1,2\n  union all\n    SELECT\n      time_bucket_gapfill('$interval', datetime) as datetime,\n      product_id,\n      locf(last(balance::numeric, datetime)) as balance\n    from investment_balance_ts\n    WHERE\n      $__timeFilter(datetime)\n      and investor_id = $_investor_id\n      and product_id in ($_product_ids)\n    GROUP BY 1, 2\n),\nbalance_ts as (\n  select * from balance_gf_ts where balance is not null\n),\nprice_1_gf_ts as (\n  select\n    time_bucket_gapfill('$interval', datetime) as datetime,\n    price_feed_id as price_feed_id,\n    locf(last(price::numeric, datetime)) as price\n  from price_ts\n  where \n    datetime between $__timeFrom()::timestamptz - ('$interval'::interval) and $__timeTo()\n    and price_feed_id in ($_price_feed_1_ids)\n  group by 1,2\n),\nprice_1_ts as (\n  select * from price_1_gf_ts where price is not null\n),\nprice_2_gf_ts as (\n  select\n    time_bucket_gapfill('$interval', datetime) as datetime,\n    price_feed_id as price_feed_id,\n    locf(last(price::numeric, datetime)) as price\n  from price_ts\n  where \n    datetime between $__timeFrom()::timestamptz - ('$interval'::interval) and $__timeTo()\n    and price_feed_id in ($_price_feed_2_ids)\n  group by 1,2\n),\nprice_2_ts as (\n  select * from price_2_gf_ts where price is not null\n)\nselect\n  p2.datetime as time,\n  pr.product_key,\n  p2.price\nfrom price_2_ts p2\n  left join product pr on pr.price_feed_2_id = p2.price_feed_id\norder by 1;",
          "refId": "A",
          "select": [[{ "params": ["value"], "type": "column" }]],
          "timeColumn": "time",
          "where": [{ "name": "$__timeFilter", "params": [], "type": "macro" }]
        }
      ],
      "title": "Investor Vault balances",
      "type": "timeseries"
    },
    { "collapsed": false, "gridPos": { "h": 1, "w": 24, "x": 0, "y": 33 }, "id": 8, "panels": [], "title": "Underlying value", "type": "row" },
    {
      "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
      "fieldConfig": {
        "defaults": {
          "color": { "mode": "palette-classic" },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": { "legend": false, "tooltip": false, "viz": false },
            "lineInterpolation": "stepAfter",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": { "type": "linear" },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": { "group": "A", "mode": "none" },
            "thresholdsStyle": { "mode": "off" }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              { "color": "green", "value": null },
              { "color": "red", "value": 80 }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": { "h": 16, "w": 24, "x": 0, "y": 34 },
      "id": 5,
      "options": { "legend": { "calcs": [], "displayMode": "list", "placement": "bottom" }, "tooltip": { "mode": "multi", "sort": "desc" } },
      "targets": [
        {
          "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "\nwith balance_gf_ts as (\n    select\n      time_bucket('$interval', $__timeFrom()::timestamptz - ('$interval'::interval)) as datetime,\n      product_id,\n      last(balance::numeric, datetime) as balance\n    from investment_balance_ts\n    where datetime < $__timeTo()\n      and investor_id = $_investor_id\n      and product_id in ($_product_ids)\n    group by 1,2\n  union all\n    SELECT\n      time_bucket_gapfill('$interval', datetime) as datetime,\n      product_id,\n      locf(last(balance::numeric, datetime)) as balance\n    from investment_balance_ts\n    WHERE\n      $__timeFilter(datetime)\n      and investor_id = $_investor_id\n      and product_id in ($_product_ids)\n    GROUP BY 1, 2\n),\nbalance_ts as (\n  select * from balance_gf_ts where balance is not null\n),\nprice_1_gf_ts as (\n  select\n    time_bucket_gapfill('$interval', datetime) as datetime,\n    price_feed_id as price_feed_id,\n    locf(last(price::numeric, datetime)) as price\n  from price_ts\n  where \n    datetime between $__timeFrom()::timestamptz - ('$interval'::interval) and $__timeTo()\n    and price_feed_id in ($_price_feed_1_ids)\n  group by 1,2\n),\nprice_1_ts as (\n  select * from price_1_gf_ts where price is not null\n),\nprice_2_gf_ts as (\n  select\n    time_bucket_gapfill('$interval', datetime) as datetime,\n    price_feed_id as price_feed_id,\n    locf(last(price::numeric, datetime)) as price\n  from price_ts\n  where \n    datetime between $__timeFrom()::timestamptz - ('$interval'::interval) and $__timeTo()\n    and price_feed_id in ($_price_feed_2_ids)\n  group by 1,2\n),\nprice_2_ts as (\n  select * from price_2_gf_ts where price is not null\n)\nselect\n  b.datetime as time,\n  pr.product_key,\n  (b.balance * p1.price) as \"underlying balance\"\nfrom balance_ts b\n  left join product pr on b.product_id = pr.product_id\n  left join price_1_ts p1 on b.datetime = p1.datetime and pr.price_feed_1_id = p1.price_feed_id\norder by 1;",
          "refId": "A",
          "select": [[{ "params": ["value"], "type": "column" }]],
          "timeColumn": "time",
          "where": [{ "name": "$__timeFilter", "params": [], "type": "macro" }]
        }
      ],
      "title": "Investor Vault underlying balances",
      "type": "timeseries"
    },
    { "collapsed": false, "gridPos": { "h": 1, "w": 24, "x": 0, "y": 50 }, "id": 10, "panels": [], "title": "Moo Token Value", "type": "row" },
    {
      "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
      "fieldConfig": {
        "defaults": {
          "color": { "mode": "palette-classic" },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": { "legend": false, "tooltip": false, "viz": false },
            "lineInterpolation": "stepAfter",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": { "type": "linear" },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": { "group": "A", "mode": "none" },
            "thresholdsStyle": { "mode": "off" }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              { "color": "green", "value": null },
              { "color": "red", "value": 80 }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": { "h": 16, "w": 24, "x": 0, "y": 51 },
      "id": 6,
      "options": { "legend": { "calcs": [], "displayMode": "list", "placement": "bottom" }, "tooltip": { "mode": "multi", "sort": "desc" } },
      "targets": [
        {
          "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "\nwith balance_gf_ts as (\n    select\n      time_bucket('$interval', $__timeFrom()::timestamptz - ('$interval'::interval)) as datetime,\n      product_id,\n      last(balance::numeric, datetime) as balance\n    from investment_balance_ts\n    where datetime < $__timeTo()\n      and investor_id = $_investor_id\n      and product_id in ($_product_ids)\n    group by 1,2\n  union all\n    SELECT\n      time_bucket_gapfill('$interval', datetime) as datetime,\n      product_id,\n      locf(last(balance::numeric, datetime)) as balance\n    from investment_balance_ts\n    WHERE\n      $__timeFilter(datetime)\n      and investor_id = $_investor_id\n      and product_id in ($_product_ids)\n    GROUP BY 1, 2\n),\nbalance_ts as (\n  select * from balance_gf_ts where balance is not null\n),\nprice_1_gf_ts as (\n  select\n    time_bucket_gapfill('$interval', datetime) as datetime,\n    price_feed_id as price_feed_id,\n    locf(last(price::numeric, datetime)) as price\n  from price_ts\n  where \n    datetime between $__timeFrom()::timestamptz - ('$interval'::interval) and $__timeTo()\n    and price_feed_id in ($_price_feed_1_ids)\n  group by 1,2\n),\nprice_1_ts as (\n  select * from price_1_gf_ts where price is not null\n),\nprice_2_gf_ts as (\n  select\n    time_bucket_gapfill('$interval', datetime) as datetime,\n    price_feed_id as price_feed_id,\n    locf(last(price::numeric, datetime)) as price\n  from price_ts\n  where \n    datetime between $__timeFrom()::timestamptz - ('$interval'::interval) and $__timeTo()\n    and price_feed_id in ($_price_feed_2_ids)\n  group by 1,2\n),\nprice_2_ts as (\n  select * from price_2_gf_ts where price is not null\n)\nselect\n  b.datetime as time,\n  pr.product_key,\n  (b.balance ) as \"moo balance\"\nfrom balance_ts b\n  left join product pr on b.product_id = pr.product_id\norder by 1;",
          "refId": "A",
          "select": [[{ "params": ["value"], "type": "column" }]],
          "timeColumn": "time",
          "where": [{ "name": "$__timeFilter", "params": [], "type": "macro" }]
        }
      ],
      "title": "Investor Vault Moo Token balances",
      "type": "timeseries"
    }
  ],
  "refresh": false,
  "schemaVersion": 36,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": { "selected": true, "text": "0x23f6030ed4bb66f4a3077e57a4bed7ffe0eb8cd2", "value": "0x23f6030ed4bb66f4a3077e57a4bed7ffe0eb8cd2" },
        "hide": 0,
        "name": "investor_address",
        "options": [
          { "selected": true, "text": "0x23f6030ed4bb66f4a3077e57a4bed7ffe0eb8cd2", "value": "0x23f6030ed4bb66f4a3077e57a4bed7ffe0eb8cd2" }
        ],
        "query": "0x23f6030ed4bb66f4a3077e57a4bed7ffe0eb8cd2",
        "skipUrlSync": false,
        "type": "textbox"
      },
      {
        "auto": true,
        "auto_count": 30,
        "auto_min": "1m",
        "current": { "selected": false, "text": "12h", "value": "12h" },
        "hide": 0,
        "name": "interval",
        "options": [
          { "selected": false, "text": "auto", "value": "$__auto_interval_interval" },
          { "selected": false, "text": "1m", "value": "1m" },
          { "selected": false, "text": "10m", "value": "10m" },
          { "selected": false, "text": "30m", "value": "30m" },
          { "selected": false, "text": "1h", "value": "1h" },
          { "selected": false, "text": "6h", "value": "6h" },
          { "selected": true, "text": "12h", "value": "12h" },
          { "selected": false, "text": "1d", "value": "1d" },
          { "selected": false, "text": "7d", "value": "7d" },
          { "selected": false, "text": "14d", "value": "14d" },
          { "selected": false, "text": "30d", "value": "30d" }
        ],
        "query": "1m,10m,30m,1h,6h,12h,1d,7d,14d,30d",
        "queryValue": "",
        "refresh": 2,
        "skipUrlSync": false,
        "type": "interval"
      },
      {
        "current": { "selected": false, "text": ["All"], "value": ["$__all"] },
        "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
        "definition": "select distinct chain from product",
        "hide": 0,
        "includeAll": true,
        "multi": true,
        "name": "chain",
        "options": [],
        "query": "select distinct chain from product",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 5,
        "type": "query"
      },
      {
        "current": { "selected": false, "text": "149822", "value": "149822" },
        "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
        "definition": "select investor_id\nfrom investor\nwhere hexstr_to_bytea('$investor_address') = address",
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "_investor_id",
        "options": [],
        "query": "select investor_id\nfrom investor\nwhere hexstr_to_bytea('$investor_address') = address",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": { "selected": false, "text": ["All"], "value": ["$__all"] },
        "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
        "definition": "select distinct b.product_id\nfrom investment_balance_ts b\njoin product p on p.product_id = b.product_id\nwhere investor_id = $_investor_id and chain in ($chain)",
        "hide": 0,
        "includeAll": true,
        "multi": true,
        "name": "_product_ids",
        "options": [],
        "query": "select distinct b.product_id\nfrom investment_balance_ts b\njoin product p on p.product_id = b.product_id\nwhere investor_id = $_investor_id and chain in ($chain)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": { "selected": true, "text": ["All"], "value": ["$__all"] },
        "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
        "definition": "select price_feed_1_id\nfrom product\nwhere product_id in ($_product_ids)",
        "hide": 0,
        "includeAll": true,
        "multi": true,
        "name": "_price_feed_1_ids",
        "options": [],
        "query": "select price_feed_1_id\nfrom product\nwhere product_id in ($_product_ids)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": { "selected": true, "text": ["All"], "value": ["$__all"] },
        "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
        "definition": "select price_feed_2_id\nfrom product\nwhere product_id in ($_product_ids)",
        "hide": 0,
        "includeAll": true,
        "multi": true,
        "name": "_price_feed_2_ids",
        "options": [],
        "query": "select price_feed_2_id\nfrom product\nwhere product_id in ($_product_ids)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": { "from": "now-30d", "to": "now" },
  "timepicker": {},
  "timezone": "",
  "title": "Investor Dashboard",
  "uid": "JAT_BdMVz",
  "version": 7,
  "weekStart": ""
}
