{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": { "type": "grafana", "uid": "-- Grafana --" },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": { "limit": 100, "matchAny": false, "tags": [], "type": "dashboard" },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 24,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
      "fieldConfig": {
        "defaults": {
          "color": { "mode": "thresholds" },
          "custom": { "align": "auto", "displayMode": "auto", "inspect": false },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              { "color": "green", "value": null },
              { "color": "red", "value": 80 }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": { "h": 16, "w": 24, "x": 0, "y": 0 },
      "id": 6,
      "options": { "footer": { "fields": "", "reducer": ["sum"], "show": false }, "showHeader": true, "sortBy": [] },
      "pluginVersion": "9.0.2",
      "targets": [
        {
          "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "\nwith data as (\n  SELECT\n    v.chain, (\n      select count(distinct vv.vault_id) \n      from data_raw.vault vv\n      where chain = v.chain\n      and (chain, vault_id) not in (\n        select distinct chain, vault_id\n        from data_raw.vault_harvest_1d_ts h\n      )\n    ) as missing_vaults,\n    (\n      select count(distinct vv.vault_id) \n      from data_raw.vault vv\n      where chain = v.chain\n      and (chain, vault_id) in (\n        select distinct chain, vault_id\n        from data_raw.vault_harvest_1d_ts h\n      )\n    ) as found_vaults_for_chain,\n    count(distinct vault_id) as total_vaults\n  FROM data_raw.vault v\n  group by 1\n)\nselect chain, missing_vaults, found_vaults_for_chain, total_vaults, case \n  when missing_vaults = 0 then 0 else (missing_vaults::numeric/total_vaults::numeric) * 100.0\nend as percent_missing\nfrom data\norder by 5 desc",
          "refId": "A",
          "select": [[{ "params": ["usd_value"], "type": "column" }]],
          "table": "oracle_price_ts",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [{ "name": "$__timeFilter", "params": [], "type": "macro" }]
        }
      ],
      "title": "Missing fee data by chain",
      "type": "table"
    },
    {
      "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
      "fieldConfig": {
        "defaults": {
          "color": { "mode": "thresholds" },
          "custom": { "align": "auto", "displayMode": "auto", "inspect": false },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              { "color": "green", "value": null },
              { "color": "red", "value": 80 }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": { "h": 15, "w": 24, "x": 0, "y": 16 },
      "id": 4,
      "options": {
        "footer": { "fields": "", "reducer": ["sum"], "show": false },
        "showHeader": true,
        "sortBy": [{ "desc": false, "displayName": "chain" }]
      },
      "pluginVersion": "9.0.2",
      "targets": [
        {
          "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "\n\nSELECT\n  chain, vault_id, count(*) over( partition by chain) as missing_vaults_by_chain\n  , count(*) over() as total_missing_vaults\nFROM data_raw.vault\nwhere (chain, vault_id) not in (\n  select distinct chain, vault_id\n  from data_raw.vault_harvest_1d_ts h\n)\n",
          "refId": "A",
          "select": [[{ "params": ["usd_value"], "type": "column" }]],
          "table": "oracle_price_ts",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [{ "name": "$__timeFilter", "params": [], "type": "macro" }]
        }
      ],
      "title": "Fee data missing for these vaults",
      "type": "table"
    },
    {
      "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
      "fieldConfig": {
        "defaults": {
          "color": { "mode": "thresholds" },
          "custom": { "align": "auto", "displayMode": "auto", "inspect": false },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              { "color": "green", "value": null },
              { "color": "red", "value": 80 }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": { "h": 13, "w": 24, "x": 0, "y": 31 },
      "id": 2,
      "options": { "footer": { "fields": "", "reducer": ["sum"], "show": false }, "showHeader": true },
      "pluginVersion": "9.0.2",
      "targets": [
        {
          "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "\nwith price_1d as (\n  select --chain, \n    oracle_id,\n    time_bucket('1d', datetime) as datetime,\n    avg(usd_value) as avg_usd_value\n  FROM data_raw.oracle_price_ts\n  where oracle_id in (\n    'WETH', -- arbitrum\n    'WETH', -- aurora\n    'AVAX', -- avax\n    'WBNB', -- bsc\n    'CELO', -- celo\n    'WCRO', -- cronos\n    'ROSE', -- emerald\n    'WFTM', -- fantom\n    'WFUSE', -- fuse\n    'ONE', -- harmony\n    'WHT', -- heco\n    'METIS', -- metis\n    'WGLMR', -- moonbeam\n    'MOVR', -- moonriver\n    'WETH', -- optimism\n    'WMATIC', -- polygon\n    'WSYS' -- syscoin\n  )\n  and $__timeFilter(datetime)\n  group by 1, 2\n),\nusd_by_chain_ts as (\n    SELECT h.datetime, h.chain, count(distinct vault_id) as vault_id_count,\n        array_agg(distinct p.oracle_id) as oracle_ids,\n        sum(h.strategist_wnative_amount) as strategist_wnative_amount,\n        sum(h.beefy_wnative_amount) as beefy_wnative_amount,\n        sum(h.strategist_wnative_amount) * avg(avg_usd_value) as strategist_usd_amount,\n        sum(h.beefy_wnative_amount * 0.86) * avg(avg_usd_value) as bifi_stakers_usd_amount,\n        sum(h.beefy_wnative_amount * 0.14) * avg(avg_usd_value) as bifi_treasury_usd_amount\n    FROM\n    data_raw.vault_harvest_1d_ts h\n        left join price_1d p on p.datetime = h.datetime and p.oracle_id = \n            case \n                when h.chain = 'arbitrum' then 'WETH'\n                when h.chain = 'aurora' then 'WETH'\n                when h.chain = 'avax' then 'AVAX'\n                when h.chain = 'bsc' then 'WBNB'\n                when h.chain = 'celo' then 'CELO'\n                when h.chain = 'cronos' then 'WCRO'\n                when h.chain = 'emerald' then 'ROSE'\n                when h.chain = 'fantom' then 'WFTM'\n                when h.chain = 'fuse' then 'WFUSE'\n                when h.chain = 'harmony' then 'ONE'\n                when h.chain = 'heco' then 'WHT'\n                when h.chain = 'metis' then 'METIS'\n                when h.chain = 'moonbeam' then 'WGLMR'\n                when h.chain = 'moonriver' then 'MOVR'\n                when h.chain = 'optimism' then 'WETH'\n                when h.chain = 'polygon' then 'WMATIC'\n                when h.chain = 'syscoin' then 'WSYS'\n                else null\n            end\n    WHERE $__timeFilter(h.datetime)\n    group by 1,2\n)\nselect \n    datetime as time,\n    chain,\n    array_agg(oracle_ids) as oracle_ids,\n    sum(strategist_wnative_amount) as strategist_wnative_amount,\n    sum(beefy_wnative_amount) as beefy_wnative_amount,\n    sum(vault_id_count) as vault_id_count,\n    sum(strategist_usd_amount) as strategist_usd_amount,\n    sum(bifi_stakers_usd_amount) as bifi_stakers_usd_amount,\n    sum(bifi_treasury_usd_amount) as bifi_treasury_usd_amount\nfrom usd_by_chain_ts\ngroup by 1,2\norder by 2,1",
          "refId": "A",
          "select": [[{ "params": ["usd_value"], "type": "column" }]],
          "table": "oracle_price_ts",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [{ "name": "$__timeFilter", "params": [], "type": "macro" }]
        }
      ],
      "title": "Panel Title",
      "type": "table"
    }
  ],
  "schemaVersion": 36,
  "style": "dark",
  "tags": [],
  "templating": { "list": [] },
  "time": { "from": "now-30d", "to": "now" },
  "timepicker": {},
  "timezone": "",
  "title": "Debug Missing fee data",
  "uid": "toyh4FgVk",
  "version": 4,
  "weekStart": ""
}
