{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": { "type": "grafana", "uid": "-- Grafana --" },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": { "limit": 100, "matchAny": false, "tags": [], "type": "dashboard" },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 27,
  "iteration": 1665167765381,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
      "fieldConfig": {
        "defaults": {
          "color": { "mode": "palette-classic" },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": { "legend": false, "tooltip": false, "viz": false },
            "lineWidth": 1,
            "scaleDistribution": { "type": "linear" }
          },
          "mappings": [],
          "thresholds": { "mode": "absolute", "steps": [{ "color": "green", "value": null }] },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": { "id": "byName", "options": "errors_count" },
            "properties": [{ "id": "color", "value": { "fixedColor": "red", "mode": "fixed" } }]
          },
          {
            "matcher": { "id": "byName", "options": "success_count" },
            "properties": [{ "id": "color", "value": { "fixedColor": "green", "mode": "fixed" } }]
          },
          {
            "matcher": { "id": "byName", "options": "not_covered_yet" },
            "properties": [{ "id": "color", "value": { "fixedColor": "blue", "mode": "fixed" } }]
          }
        ]
      },
      "gridPos": { "h": 15, "w": 12, "x": 0, "y": 0 },
      "id": 8,
      "options": {
        "barRadius": 0,
        "barWidth": 0.8,
        "groupWidth": 0.7,
        "legend": { "calcs": [], "displayMode": "list", "placement": "bottom" },
        "orientation": "horizontal",
        "showValue": "never",
        "stacking": "percent",
        "tooltip": { "mode": "single", "sort": "none" },
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "pluginVersion": "9.0.2",
      "targets": [
        {
          "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with max_block_number_by_chain_from_import_status as materialized (\n  select \n    p.chain, \n    max((import_data->'data'->>'chainLatestBlockNumber')::integer) as last_covered\n  from import_status i\n  join product p on p.product_id = i.product_id\n  group by 1\n),\nmax_block_number_by_chain_from_investments as materialized (\n  select \n    p.chain, \n    last(block_number, datetime) as last_covered\n  from investment_balance_ts i\n  join product p on p.product_id = i.product_id\n  group by 1\n),\nmax_block_number_by_chain as (\n  select \n    im.chain,\n    greatest(im.last_covered, coalesce(iv.last_covered, 0)) as last_covered\n  from max_block_number_by_chain_from_import_status im\n  left join max_block_number_by_chain_from_investments iv on im.chain = iv.chain\n),\nprocuct_block_stats as (\n  select \n    p.chain,\n    product_key, \n    i.import_data is not null as has_import_status,\n    (import_data->'data'->>'contractCreatedAtBlock')::integer as contract_creation_block,\n    (import_data->'data'->'coveredBlockRange'->>'from')::integer || '->' || (import_data->'data'->'coveredBlockRange'->>'to')::integer as covered_range,\n    b.last_covered as chain_last_block,\n    b.last_covered - (import_data->'data'->>'contractCreatedAtBlock')::integer + 1 as total_blocks_to_cover,\n    jsonb_import_range_size(import_data->'data'->'coveredBlockRange') as blocks_covered,\n    (b.last_covered - (import_data->'data'->>'contractCreatedAtBlock')::integer) + 1\n    -\n    jsonb_import_range_size(import_data->'data'->'coveredBlockRange')\n    as rest_to_cover,\n    jsonb_import_ranges_size_sum(import_data->'data'->'blockRangesToRetry') as blocks_to_retry\n  from product p\n  left join import_status i on p.product_id = i.product_id\n  left join max_block_number_by_chain b on p.chain = b.chain\n  where p.chain in ($chain)\n)\nselect \n  chain,\n  sum(blocks_to_retry) as errors_count,\n  sum(blocks_covered)::double precision - sum(blocks_to_retry) as success_count,\n  sum(total_blocks_to_cover)::double precision - sum(blocks_covered) as not_covered_yet\nfrom procuct_block_stats\ngroup by 1\norder by 1",
          "refId": "A",
          "select": [[{ "params": ["value"], "type": "column" }]],
          "timeColumn": "time",
          "where": [{ "name": "$__timeFilter", "params": [], "type": "macro" }]
        }
      ],
      "title": "Block coverage status",
      "type": "barchart"
    },
    {
      "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
      "fieldConfig": {
        "defaults": {
          "color": { "mode": "palette-classic" },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": { "legend": false, "tooltip": false, "viz": false },
            "lineWidth": 1,
            "scaleDistribution": { "type": "linear" }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              { "color": "green", "value": null },
              { "color": "red", "value": 80 }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": { "h": 15, "w": 12, "x": 12, "y": 0 },
      "id": 2,
      "options": {
        "barRadius": 0,
        "barWidth": 0.97,
        "groupWidth": 0.7,
        "legend": { "calcs": [], "displayMode": "list", "placement": "bottom" },
        "orientation": "horizontal",
        "showValue": "auto",
        "stacking": "none",
        "tooltip": { "mode": "single", "sort": "none" },
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "targets": [
        {
          "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with all_chains as (\n  select distinct chain from product\n  where chain in ($chain)\n)\nselect \n  c.chain as value, \n  count(*) filter(where b.balance is not null) as metric \nfrom all_chains c \n  left join investment_balance_ts b on (investment_data->>'chain')::chain_enum = c.chain\ngroup by 1 \norder by 1;",
          "refId": "A",
          "select": [[{ "params": ["value"], "type": "column" }]],
          "timeColumn": "time",
          "where": [{ "name": "$__timeFilter", "params": [], "type": "macro" }]
        }
      ],
      "title": "Investment logs by chain",
      "type": "barchart"
    },
    {
      "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
      "fieldConfig": {
        "defaults": {
          "color": { "mode": "thresholds" },
          "custom": { "align": "auto", "displayMode": "auto", "inspect": false },
          "mappings": [],
          "thresholds": { "mode": "absolute", "steps": [{ "color": "green", "value": null }] }
        },
        "overrides": [
          { "matcher": { "id": "byName", "options": "has_import_status" }, "properties": [{ "id": "color", "value": { "mode": "palette-classic" } }] }
        ]
      },
      "gridPos": { "h": 11, "w": 24, "x": 0, "y": 15 },
      "id": 6,
      "options": {
        "footer": { "fields": "", "reducer": ["sum"], "show": false },
        "showHeader": true,
        "sortBy": [{ "desc": false, "displayName": "rest_to_cover" }]
      },
      "pluginVersion": "9.0.2",
      "targets": [
        {
          "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with max_block_number_by_chain_from_import_status as materialized (\n  select \n    p.chain, \n    max((import_data->'data'->>'chainLatestBlockNumber')::integer) as last_covered\n  from import_status i\n  join product p on p.product_id = i.product_id\n  group by 1\n),\nmax_block_number_by_chain_from_investments as materialized (\n  select \n    p.chain, \n    last(block_number, datetime) as last_covered\n  from investment_balance_ts i\n  join product p on p.product_id = i.product_id\n  group by 1\n),\nmax_block_number_by_chain as (\n  select \n    im.chain,\n    greatest(im.last_covered, coalesce(iv.last_covered, 0)) as last_covered\n  from max_block_number_by_chain_from_import_status im\n  left join max_block_number_by_chain_from_investments iv on im.chain = iv.chain\n)\nselect \n    p.chain,\n    product_key, \n    i.import_data is not null as has_import_status,\n    (import_data->'data'->>'contractCreatedAtBlock')::integer as contract_creation_block,\n    (import_data->'data'->'coveredBlockRange'->>'from')::integer || '->' || (import_data->'data'->'coveredBlockRange'->>'to')::integer as covered_range,\n    b.last_covered as chain_last_block,\n    b.last_covered - (import_data->'data'->>'contractCreatedAtBlock')::integer + 1 as total_blocks_to_cover,\n    jsonb_import_range_size(import_data->'data'->'coveredBlockRange') as blocks_covered,\n    (b.last_covered - (import_data->'data'->>'contractCreatedAtBlock')::integer) + 1\n    -\n    jsonb_import_range_size(import_data->'data'->'coveredBlockRange')\n    as rest_to_cover,\n    jsonb_import_ranges_size_sum(import_data->'data'->'blockRangesToRetry') as blocks_to_retry\nfrom product p\nleft join import_status i on p.product_id = i.product_id\nleft join max_block_number_by_chain b on p.chain = b.chain\nwhere p.chain in ($chain)",
          "refId": "A",
          "select": [[{ "params": ["value"], "type": "column" }]],
          "timeColumn": "time",
          "where": [{ "name": "$__timeFilter", "params": [], "type": "macro" }]
        }
      ],
      "title": "Product import stats",
      "type": "table"
    }
  ],
  "schemaVersion": 36,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": { "selected": true, "text": ["All"], "value": ["$__all"] },
        "datasource": { "type": "postgres", "uid": "P1A7A05C63CAD1F73" },
        "definition": "select distinct chain from product",
        "hide": 0,
        "includeAll": true,
        "multi": true,
        "name": "chain",
        "options": [],
        "query": "select distinct chain from product",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 5,
        "type": "query"
      }
    ]
  },
  "time": { "from": "now-6h", "to": "now" },
  "timepicker": {},
  "timezone": "",
  "title": "Data Ingestion follow up",
  "uid": "rpL7jwV4k",
  "version": 11,
  "weekStart": ""
}
