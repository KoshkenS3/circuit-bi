version: "3.9" # optional since v1.27.0

# docker build -t beefy-data-importer -f ./deploy/Dockerfile ./
# docker volume create --driver local --opt type=none --opt device=${PWD}/data/indexed --opt o=bind beefy_data_directory
# docker compose -p beefy -f deploy/docker-compose.yml up -d
# docker compose -p beefy -f deploy/docker-compose.yml logs -f
# docker compose -p beefy -f deploy/docker-compose.yml down
# docker compose -p beefy -f deploy/docker-compose.yml rm # cleanup logs sometimes

x-importer: &importer
  image: beefy-data-importer
  restart: always
  command: ["npx", "ts-node", "$$WORK_SCRIPT", "--chain", "$$WORK_CHAIN"]
  volumes:
    - data_directory:/data
  networks:
    - backend

x-vault-importer-env: &vault-importer-env
  LOG_LEVEL: "info"
  DATA_DIRECTORY: /data
  WORK_SCRIPT: ./src/import/import-vault-transfers.ts

x-block-samples-importer-env: &block-samples-importer-env
  LOG_LEVEL: "info"
  DATA_DIRECTORY: /data
  WORK_SCRIPT: ./src/import/import-block-samples.ts

services:
  #############################################################################
  #############################################################################
  #############################################################################

  import-vault-transfers-fantom:
    <<: *importer
    environment:
      <<: *vault-importer-env
      WORK_CHAIN: fantom

  import-vault-transfers-cronos:
    <<: *importer
    environment:
      <<: *vault-importer-env
      WORK_CHAIN: cronos

  import-vault-transfers-bsc:
    <<: *importer
    environment:
      <<: *vault-importer-env
      WORK_CHAIN: bsc

  import-vault-transfers-polygon:
    <<: *importer
    environment:
      <<: *vault-importer-env
      WORK_CHAIN: polygon

  import-vault-transfers-heco:
    <<: *importer
    environment:
      <<: *vault-importer-env
      WORK_CHAIN: heco

  import-vault-transfers-avax:
    <<: *importer
    environment:
      <<: *vault-importer-env
      WORK_CHAIN: avax

  import-vault-transfers-moonbeam:
    <<: *importer
    environment:
      <<: *vault-importer-env
      WORK_CHAIN: moonbeam

  import-vault-transfers-celo:
    <<: *importer
    environment:
      <<: *vault-importer-env
      WORK_CHAIN: celo

  import-vault-transfers-moonriver:
    <<: *importer
    environment:
      <<: *vault-importer-env
      WORK_CHAIN: moonriver

  import-vault-transfers-arbitrum:
    <<: *importer
    environment:
      <<: *vault-importer-env
      WORK_CHAIN: arbitrum

  import-vault-transfers-aurora:
    <<: *importer
    environment:
      <<: *vault-importer-env
      WORK_CHAIN: aurora

  # disabled because explorer api is different
  #import-vault-transfers-metis:
  #  <<: *importer
  #  environment:
  #    <<: *vault-importer-env
  #    WORK_CHAIN: metis

  # disabled because explorer api is different
  #import-vault-transfers-harmony:
  #  <<: *importer
  #  environment:
  #    <<: *vault-importer-env
  #    WORK_CHAIN: harmony

  import-vault-transfers-fuse:
    <<: *importer
    environment:
      <<: *vault-importer-env
      WORK_CHAIN: fuse

  # no beefy vault list for now
  #import-vault-transfers-syscoin:
  #  <<: *importer
  #  environment:
  #    <<: *vault-importer-env
  #    WORK_CHAIN: syscoin

  # disabled because explorer api is different
  #import-vault-transfers-emerald:
  #  <<: *importer
  #  environment:
  #    <<: *vault-importer-env
  #    WORK_CHAIN: emerald

  #############################################################################
  #############################################################################
  #############################################################################

  import-block-samples-fantom:
    <<: *importer
    environment:
      <<: *block-samples-importer-env
      WORK_CHAIN: fantom

  import-block-samples-cronos:
    <<: *importer
    environment:
      <<: *block-samples-importer-env
      WORK_CHAIN: cronos

  import-block-samples-bsc:
    <<: *importer
    environment:
      <<: *block-samples-importer-env
      WORK_CHAIN: bsc

  import-block-samples-polygon:
    <<: *importer
    environment:
      <<: *block-samples-importer-env
      WORK_CHAIN: polygon

  import-block-samples-heco:
    <<: *importer
    environment:
      <<: *block-samples-importer-env
      WORK_CHAIN: heco

  import-block-samples-avax:
    <<: *importer
    environment:
      <<: *block-samples-importer-env
      WORK_CHAIN: avax

  import-block-samples-moonbeam:
    <<: *importer
    environment:
      <<: *block-samples-importer-env
      WORK_CHAIN: moonbeam

  # disabled because script needs to be adapted
  #import-block-samples-celo:
  #  <<: *importer
  #  environment:
  #    <<: *block-samples-importer-env
  #    WORK_CHAIN: celo

  import-block-samples-moonriver:
    <<: *importer
    environment:
      <<: *block-samples-importer-env
      WORK_CHAIN: moonriver

  import-block-samples-arbitrum:
    <<: *importer
    environment:
      <<: *block-samples-importer-env
      WORK_CHAIN: arbitrum

  import-block-samples-aurora:
    <<: *importer
    environment:
      <<: *block-samples-importer-env
      WORK_CHAIN: aurora

  import-block-samples-metis:
    <<: *importer
    environment:
      <<: *block-samples-importer-env
      WORK_CHAIN: metis

  import-block-samples-harmony:
    <<: *importer
    environment:
      <<: *block-samples-importer-env
      WORK_CHAIN: harmony

  import-block-samples-fuse:
    <<: *importer
    environment:
      <<: *block-samples-importer-env
      WORK_CHAIN: fuse

  import-block-samples-syscoin:
    <<: *importer
    environment:
      <<: *block-samples-importer-env
      WORK_CHAIN: syscoin

  import-block-samples-emerald:
    <<: *importer
    environment:
      <<: *block-samples-importer-env
      WORK_CHAIN: emerald

volumes:
  data_directory:
    external: true
    name: beefy_data_directory

networks:
  frontend: {}
  backend: {}
