version: "3.9" # optional since v1.27.0
services:
  timescaledb:
    image: timescale/timescaledb:latest-pg14
    ports:
      - "5432:5432"
    volumes:
      - timescaledb_data:/pgdata
    # configure the database
    #command: postgres -c max_locks_per_transaction=600
    environment:
      POSTGRES_USER: beefy
      POSTGRES_PASSWORD: beefy
      POSTGRES_DB: beefy
      PGDATA: /pgdata
    networks:
      - backend

  influxdb:
    image: influxdb:2.2-alpine
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb2
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: beefy
      DOCKER_INFLUXDB_INIT_PASSWORD: beefybeefy
      DOCKER_INFLUXDB_INIT_ORG: beefy
      DOCKER_INFLUXDB_INIT_BUCKET: beefy
    networks:
      - backend

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - backend

  grafana:
    image: grafana/grafana:8.5.4
    ports:
      - "3000:3000"
    environment:
      POSTGRES_HOST: timescaledb
      POSTGRES_PORT: 5432
      POSTGRES_USER: beefy
      POSTGRES_PASSWORD: beefy
      POSTGRES_DB: beefy
      INFLUXDB_HOST: influxdb
      INFLUXDB_PORT: 8086
      INFLUXDB_USER: beefy
      INFLUXDB_PASSWORD: beefybeefy
      INFLUXDB_DB: beefy
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana.ini:/etc/grafana/grafana.ini
      - ./grafana_datasource.yml:/etc/grafana/provisioning/datasources/timescaledb.yml
    depends_on:
      - timescaledb
      - influxdb
    networks:
      - backend
      - frontend

volumes:
  timescaledb_data: {}
  grafana_data: {}
  redis_data: {}
  influxdb_data: {}

networks:
  frontend: {}
  backend: {}
